// <auto-generated />
using System;
using GlobalProcess.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GlobalProcess.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240520130731_AdjustUserGroupPermissionRelationship")]
    partial class AdjustUserGroupPermissionRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GlobalProcess.Core.Models.ActionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignedUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentActionItemId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignedUserId");

                    b.HasIndex("ParentActionItemId");

                    b.HasIndex("StepId");

                    b.ToTable("ActionItems");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.BusinessProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusinessProcesses");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.BusinessProcessInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentStepId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkflowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStepId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("BusinessProcessInstances");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActionItemId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessProcessId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessProcessInstanceId")
                        .HasColumnType("int");

                    b.Property<int?>("CommentId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DynamicFieldId")
                        .HasColumnType("int");

                    b.Property<int?>("DynamicFormId")
                        .HasColumnType("int");

                    b.Property<int?>("FieldPermissionsId")
                        .HasColumnType("int");

                    b.Property<int?>("FieldValueId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StepId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("UserGroupPermissionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("WorkflowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionItemId");

                    b.HasIndex("BusinessProcessId");

                    b.HasIndex("BusinessProcessInstanceId");

                    b.HasIndex("CommentId");

                    b.HasIndex("DynamicFieldId");

                    b.HasIndex("DynamicFormId");

                    b.HasIndex("FieldPermissionsId");

                    b.HasIndex("FieldValueId");

                    b.HasIndex("StepId");

                    b.HasIndex("UserGroupId");

                    b.HasIndex("UserGroupPermissionId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.DynamicField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Options")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("DynamicFields");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.DynamicForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DynamicForms");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.FieldPermissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("StepId");

                    b.ToTable("FieldPermissions");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.FieldValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessProcessInstanceId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessProcessInstanceId");

                    b.HasIndex("FieldId");

                    b.HasIndex("FormId");

                    b.ToTable("FieldValues");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkflowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("WorkflowId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.UserGroupPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("CanView")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.Property<int>("UserGroupId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StepId");

                    b.HasIndex("UserGroupId");

                    b.ToTable("UserGroupPermissions");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.Workflow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessProcessId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessProcessId");

                    b.ToTable("Workflows");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.ActionItem", b =>
                {
                    b.HasOne("GlobalProcess.Core.Models.ApplicationUser", "AssignedUser")
                        .WithMany()
                        .HasForeignKey("AssignedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlobalProcess.Core.Models.ActionItem", "ParentActionItem")
                        .WithMany("SubActionItems")
                        .HasForeignKey("ParentActionItemId");

                    b.HasOne("GlobalProcess.Core.Models.Step", "Step")
                        .WithMany()
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("ParentActionItem");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.BusinessProcessInstance", b =>
                {
                    b.HasOne("GlobalProcess.Core.Models.Step", "CurrentStep")
                        .WithMany()
                        .HasForeignKey("CurrentStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlobalProcess.Core.Models.Workflow", "Workflow")
                        .WithMany()
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentStep");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.Comment", b =>
                {
                    b.HasOne("GlobalProcess.Core.Models.ActionItem", "ActionItem")
                        .WithMany("Comments")
                        .HasForeignKey("ActionItemId");

                    b.HasOne("GlobalProcess.Core.Models.BusinessProcess", null)
                        .WithMany("Comments")
                        .HasForeignKey("BusinessProcessId");

                    b.HasOne("GlobalProcess.Core.Models.BusinessProcessInstance", "BusinessProcessInstance")
                        .WithMany("Comments")
                        .HasForeignKey("BusinessProcessInstanceId");

                    b.HasOne("GlobalProcess.Core.Models.Comment", null)
                        .WithMany("Comments")
                        .HasForeignKey("CommentId");

                    b.HasOne("GlobalProcess.Core.Models.DynamicField", null)
                        .WithMany("Comments")
                        .HasForeignKey("DynamicFieldId");

                    b.HasOne("GlobalProcess.Core.Models.DynamicForm", null)
                        .WithMany("Comments")
                        .HasForeignKey("DynamicFormId");

                    b.HasOne("GlobalProcess.Core.Models.FieldPermissions", null)
                        .WithMany("Comments")
                        .HasForeignKey("FieldPermissionsId");

                    b.HasOne("GlobalProcess.Core.Models.FieldValue", null)
                        .WithMany("Comments")
                        .HasForeignKey("FieldValueId");

                    b.HasOne("GlobalProcess.Core.Models.Step", "Step")
                        .WithMany("Comments")
                        .HasForeignKey("StepId");

                    b.HasOne("GlobalProcess.Core.Models.UserGroup", null)
                        .WithMany("Comments")
                        .HasForeignKey("UserGroupId");

                    b.HasOne("GlobalProcess.Core.Models.UserGroupPermission", null)
                        .WithMany("Comments")
                        .HasForeignKey("UserGroupPermissionId");

                    b.HasOne("GlobalProcess.Core.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlobalProcess.Core.Models.Workflow", null)
                        .WithMany("Comments")
                        .HasForeignKey("WorkflowId");

                    b.Navigation("ActionItem");

                    b.Navigation("BusinessProcessInstance");

                    b.Navigation("Step");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.DynamicField", b =>
                {
                    b.HasOne("GlobalProcess.Core.Models.DynamicForm", "Form")
                        .WithMany("Fields")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.FieldPermissions", b =>
                {
                    b.HasOne("GlobalProcess.Core.Models.DynamicField", "Field")
                        .WithMany()
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlobalProcess.Core.Models.Step", "Step")
                        .WithMany("FieldPermissions")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.FieldValue", b =>
                {
                    b.HasOne("GlobalProcess.Core.Models.BusinessProcessInstance", "BusinessProcessInstance")
                        .WithMany("FieldValues")
                        .HasForeignKey("BusinessProcessInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlobalProcess.Core.Models.DynamicField", "Field")
                        .WithMany()
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlobalProcess.Core.Models.DynamicForm", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessProcessInstance");

                    b.Navigation("Field");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.Step", b =>
                {
                    b.HasOne("GlobalProcess.Core.Models.DynamicForm", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlobalProcess.Core.Models.Workflow", "Workflow")
                        .WithMany("Steps")
                        .HasForeignKey("WorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Workflow");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.UserGroupPermission", b =>
                {
                    b.HasOne("GlobalProcess.Core.Models.Step", "Step")
                        .WithMany("Permissions")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlobalProcess.Core.Models.UserGroup", "UserGroup")
                        .WithMany("UserGroupPermissions")
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Step");

                    b.Navigation("UserGroup");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.Workflow", b =>
                {
                    b.HasOne("GlobalProcess.Core.Models.BusinessProcess", "BusinessProcess")
                        .WithMany("Workflows")
                        .HasForeignKey("BusinessProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessProcess");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.ActionItem", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("SubActionItems");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.BusinessProcess", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Workflows");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.BusinessProcessInstance", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FieldValues");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.Comment", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.DynamicField", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.DynamicForm", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Fields");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.FieldPermissions", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.FieldValue", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.Step", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FieldPermissions");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.UserGroup", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("UserGroupPermissions");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.UserGroupPermission", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("GlobalProcess.Core.Models.Workflow", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
